train = [
    11 11	78	12.60	100;
    2 11	88	10.80	80;
    -2 11	100	9.70	30;
    -11 20	83	12.20	50;
    -5 8	100	14.20	0;
    2 12	90	10.50	90;
    -6 6	87	12.50	30;
    22 18	82	12.90	20;
    22 19	91	12.30	80;
    21 21	92	9.40	100;
    8 10	90	11.70	60;
    25 18	85	11.80	40;
    9 20	93	11.10	95;
    7 14	92	8.30	90;
    8 19	96	12.00	40;
    18 13	100	11.30	100;
    -14 3	96	4.80	100;
    -21 4	86	6.90	100;
    -26 3	89	7.10	40;
    -7 15	93	8.10	95;
    -15 15	43	6.90	100;
	-6 6	60	7.70	100;
    -14 2	92	9.00	60;
    -8 2	96	7.1	100;
    -19 0	83	3.9	100;
    -23 -4	88	8.1	20;
    -11 -2  80 10.3 10;
    5 5   80  9 95;
    -23 5 61 5.1 95;
    -7 8 81 7.4 100;
     9 15 100 7.9 100;
    -27 5 51 3.8 0;
    -24 -1 74 6.3 0;
    -29 -2 69 6.3 0;
    -19 3 65 7.8 30;
    -9 6 73 9.5 30;
];
 y = [1;1;-1;-1;-1;1;-1;1;1;1;1;1;1;1;1;1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;1;-1;-1;1;-1;-1;-1;-1;-1];

% normalize
train = normc(train);
distance = ones(36,36);
for i = 1:36
    for j = i:36
        distance(i,j) = ((train(i,1)-train(j,1))^2 + (train(i,2)-train(j,2))^2 + (train(i,3)-train(j,3))^2 + (train(i,4)-train(j,4))^2 + (train(i,5)-train(j,5))^2)^0.5;
    end;
end;
j = 1;
for i = 1:36
    for k = i:36
        w(j) = distance(i,k);
        node1(j) = i;
        node2(j) = k;
        j = j + 1;
    end;
end;
DG = sparse(node1,node2,w);
UG = tril(DG + DG')
% view(biograph(UG,[],'ShowArrows','off','ShowWeights','on'))
[ST,pred] = graphminspantree(UG)
view(biograph(ST,[],'ShowArrows','off','ShowWeights','on'))


% [n,d1]=knnsearch(train(1:23,:),train(24:size(train,1),:),'k',36);
% predict = y(n,:)
% [n,d2]=knnsearch(train(1:23,:),train(24:size(train,1),:),'k',5);
% for i = 1:5
%     p(:,i) = y(n(:,1),:);
% end;
% p1 = [y(n(1,1),:), y(n(1,2),:), y(n(1,3),:),y(n(1,4),:),y(n(1,5),:)]
% p2 = [y(n(2,1),:), y(n(2,2),:), y(n(2,3),:),y(n(2,4),:),y(n(2,5),:)]
% p3 = [y(n(3,1),:), y(n(3,2),:), y(n(3,3),:),y(n(3,4),:),y(n(3,5),:)]